package main

import (
	"common/file"
	"os"
)

const kTemplate = `//Generated by common/gen_conf

package {{.P}}

import "sync/atomic"

var _{{.N}} atomic.Value

func {{.F}}() {{.T}} { return _{{.N}}.Load().({{.T}}) }
func Nil{{.F}}() {{.T}} { return nil }
func (v {{.T}}) Init() { _{{.N}}.Store(v) } //一块全新内存
`

var g struct {
	T string //类型名
	N string //变量名
	F string //接口名
	P string //packag
}

func main() {
	g.T = os.Args[1]
	g.P = os.Args[2]
	if g.N = g.T; g.T[0] == '*' {
		g.N = g.T[1:]
	}
	if g.F = g.N; g.N[0] >= 'a' && g.N[0] <= 'z' {
		tmp := []byte(g.N)
		tmp[0] -= 'a' - 'A'
		g.F = string(tmp)
	}
	file.CreateTemplate(&g, "./", "gen_"+g.N+".go", kTemplate)
}
